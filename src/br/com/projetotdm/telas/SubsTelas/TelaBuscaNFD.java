/*
 * The MIT License
 *
 * Copyright 2023 joao.faria.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package br.com.projetotdm.telas.SubsTelas;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import net.proteanit.sql.DbUtils;
import br.com.projetotdm.DAO.ModuloConexao;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author joao.faria
 */
public class TelaBuscaNFD extends javax.swing.JInternalFrame {

    Connection conexao = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

    /**
     * Creates new form TelaBuscaNFD
     */
    public TelaBuscaNFD() {
        initComponents();
        conexao = ModuloConexao.conector();
        ((DefaultTableModel) tbl_busca_nfd.getModel()).setRowCount(0);

    }

    private void buscar() {
        String instru_sql = "SELECT avaria_status AS Status , avaria_numeronfe AS Numero_NFD, avaria_filial AS Filial, avaria_serie AS Serie, avaria_cte AS CTE, avaria_motivo AS Motivo\n"
                + "FROM tbavarias\n"
                + "WHERE avaria_numeronfe LIKE ?\n"
                + "ORDER BY avaria_status";

        try {
            pst = conexao.prepareStatement(instru_sql);
            pst.setString(1, txt_busca_avaria.getText() + '%');
            rs = pst.executeQuery();

            // biblioteca rs2xml.jar para preencher as tabelas
            tbl_busca_nfd.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
            System.out.println("Ocorreu um erro: \n" + e);
        }
    }

    private void buscarcte() {
        String instru_sql = "SELECT avaria_status AS Status , avaria_numeronfe AS Numero_NFD, avaria_filial AS Filial, avaria_serie AS Serie, avaria_cte AS CTE, avaria_motivo AS Motivo\n"
                + "FROM tbavarias\n"
                + "WHERE avaria_filial LIKE ? AND avaria_serie LIKE ? AND avaria_cte LIKE ?\n"
                + "ORDER BY avaria_status";

        try {
            pst = conexao.prepareStatement(instru_sql);
            pst.setString(1, txt_busca_filial.getText() + '%');
            pst.setString(2, txt_busca_serie.getText() + '%');
            pst.setString(3, txt_busca_cte.getText() + '%');
            rs = pst.executeQuery();

            // biblioteca rs2xml.jar para preencher as tabelas
            tbl_busca_nfd.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
            System.out.println("Ocorreu um erro: \n" + e);
        }
    }

    private void buscarstatus() {
        String instru_sql = "SELECT avaria_status AS Status , avaria_numeronfe AS Numero_NFD, avaria_filial AS Filial, avaria_serie AS Serie, avaria_cte AS CTE, avaria_motivo AS Motivo\n"
                + "FROM tbavarias\n"
                + "WHERE avaria_status = ?\n"
                + "ORDER BY avaria_status";

        try {

            String itemselect = jComboBox1.getSelectedItem().toString();
            if (itemselect.equals("~")) {
                JOptionPane.showMessageDialog(rootPane, "Selecione um Status para filtragem.");
            } else {
                pst = conexao.prepareStatement(instru_sql);
                pst.setString(1, jComboBox1.getSelectedItem().toString());
                rs = pst.executeQuery();

                // biblioteca rs2xml.jar para preencher as tabelas
                tbl_busca_nfd.setModel(DbUtils.resultSetToTableModel(rs));
            }

        } catch (Exception e) {
            System.out.println("Ocorreu um erro: \n" + e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_busca_nfd = new javax.swing.JTable();
        lbl_busca_avaria = new javax.swing.JLabel();
        txt_busca_avaria = new javax.swing.JTextField();
        lbl_busca_filial = new javax.swing.JLabel();
        lbl_busca_serie = new javax.swing.JLabel();
        lbl_busca_cte = new javax.swing.JLabel();
        txt_busca_filial = new javax.swing.JTextField();
        txt_busca_serie = new javax.swing.JTextField();
        txt_busca_cte = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        lbl_busca_status = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setClosable(true);
        setIconifiable(true);

        tbl_busca_nfd.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tbl_busca_nfd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Status", "Numero NFD", "Filial", "Serie", "Ctee", "Motivo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_busca_nfd);

        lbl_busca_avaria.setText("Busca por NFD:");

        lbl_busca_filial.setText("Filial:");

        lbl_busca_serie.setText("Série:");

        lbl_busca_cte.setText("CTEE:");

        txt_busca_filial.setColumns(6);

        txt_busca_serie.setColumns(6);
        txt_busca_serie.setToolTipText("");

        txt_busca_cte.setColumns(6);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "~", "Pendente", "Processando", "Em espera", "Finalizado", "Devolução" }));

        lbl_busca_status.setText("Status:");

        jButton1.setFont(new java.awt.Font("Serif", 1, 13)); // NOI18N
        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_busca_avaria, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_busca_filial)
                            .addComponent(lbl_busca_status))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_busca_avaria, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(txt_busca_filial, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lbl_busca_serie)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txt_busca_serie, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(lbl_busca_cte)
                                    .addGap(18, 18, 18)
                                    .addComponent(txt_busca_cte, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 715, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_busca_avaria, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_busca_avaria))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_busca_filial, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbl_busca_cte)
                        .addComponent(txt_busca_serie, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_busca_cte, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbl_busca_filial)
                        .addComponent(lbl_busca_serie)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_busca_status)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );

        setBounds(120, 80, 767, 455);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int camposPreenchidos = 0;

        if (!txt_busca_avaria.getText().isEmpty()) {
            camposPreenchidos++;
        }

        if ((!txt_busca_filial.getText().isEmpty() || !txt_busca_serie.getText().isEmpty() || !txt_busca_cte.getText().isEmpty())) {
            camposPreenchidos++;
        }

        if (jComboBox1.getSelectedItem() != null && !jComboBox1.getSelectedItem().toString().equals("~")) {
            camposPreenchidos++;
        }

// Verificar o número de campos preenchidos
        if (camposPreenchidos == 0) {
            // Todos os campos estão vazios, chame a função buscar()
            buscar();
        } else if (camposPreenchidos == 1) {
            // Chamar a função apropriada
            if (!txt_busca_avaria.getText().isEmpty()) {
                buscar();
            } else if (!txt_busca_filial.getText().isEmpty() && !txt_busca_serie.getText().isEmpty() && !txt_busca_cte.getText().isEmpty()) {
                buscarcte();
            } else if (jComboBox1.getSelectedItem() != null && !jComboBox1.getSelectedItem().toString().equals("~")) {
                buscarstatus();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Preencha apenas um campo para realizar a busca.");
        }

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_busca_avaria;
    private javax.swing.JLabel lbl_busca_cte;
    private javax.swing.JLabel lbl_busca_filial;
    private javax.swing.JLabel lbl_busca_serie;
    private javax.swing.JLabel lbl_busca_status;
    private javax.swing.JTable tbl_busca_nfd;
    private javax.swing.JTextField txt_busca_avaria;
    private javax.swing.JTextField txt_busca_cte;
    private javax.swing.JTextField txt_busca_filial;
    private javax.swing.JTextField txt_busca_serie;
    // End of variables declaration//GEN-END:variables
}
